plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'borman'
version='0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter'

	//Db driver
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyClient(dependsOn: ":devybigboard-client:clientBuild") {

	doFirst {
		delete "src/main/resources/static"
		delete "src/main/resources/templates"
	}
	doLast {
		copy {
			from new File(project(":devybigboard-client").getProjectDir(), "build")
			into "src/main/resources/static"
		}
		copy {
			from new File(project(":devybigboard-client").getProjectDir(), "build/index.html")
			into "src/main/resources/templates"
		}
	}
}

jar {
	enabled = false
}

task finalizeBuild {
	dependsOn 'build'
	doLast {
		def buildLibs = file("${buildDir}/libs")
		def oldJar = file("${buildLibs}/devybigboard-server-${version}.jar")
		def newJar = file("${buildLibs}/devy-big-board.jar")
		if (oldJar.exists())
			oldJar.renameTo(newJar)
	}
}


processResources.dependsOn(copyClient)
clean.dependsOn(":devybigboard-client:clientClean")
build.finalizedBy(finalizeBuild)

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean